<Window
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:TancAndreiCristian_Proiect"
        xmlns:ProjectDatabaseModel="clr-namespace:ProjectDatabaseModel;assembly=ProjectDatabaseModel" x:Class="TancAndreiCristian_Proiect.MainWindow"
        mc:Ignorable="d"
        Title="MainWindow" Height="700" Width="600" Loaded="Window_Loaded">
    <Window.Resources>
        <CollectionViewSource x:Key="employeeViewSource" d:DesignSource="{d:DesignInstance {x:Type ProjectDatabaseModel:Employee}, CreateList=True}"/>
        <CollectionViewSource x:Key="taskViewSource" d:DesignSource="{d:DesignInstance {x:Type ProjectDatabaseModel:Task}, CreateList=True}"/>
        <CollectionViewSource x:Key="employeeAssignmentsViewSource" Source="{Binding Assignments, Source={StaticResource employeeViewSource}}"/>

        <ControlTemplate x:Key="validationTemplate">
            <DockPanel>
                <TextBlock Foreground="Red" FontSize="20">!</TextBlock>
                <AdornedElementPlaceholder/>
            </DockPanel>
        </ControlTemplate>

        <Style x:Key="textBoxInError" TargetType="{x:Type TextBox}">
            <Style.Triggers>
                <Trigger Property="Validation.HasError" Value="true">
                    <Setter Property="ToolTip" Value="{Binding RelativeSource={x:Static RelativeSource.Self}, Path=(Validation.Errors)/ErrorContent}"/>
                </Trigger>
            </Style.Triggers>
        </Style>

    </Window.Resources>
    <Grid>

        <TabControl x:Name="mobileAppTabControl" HorizontalAlignment="Center" Height="600" Margin="10,50,10,10" VerticalAlignment="Top" Width="570">
            <TabItem Header="Employees">
                <Grid Background="#FFE5E5E5" DataContext="{StaticResource employeeViewSource}">

                    <DataGrid x:Name="employeeDataGrid" AutoGenerateColumns="False" EnableRowVirtualization="True" ItemsSource="{Binding}" Margin="25,25,25,360" RowDetailsVisibilityMode="VisibleWhenSelected">
                        <DataGrid.Columns>
                            <DataGridTextColumn x:Name="employeeIdColumn" Binding="{Binding employeeId}" Header="employee Id" Width="SizeToHeader"/>
                            <DataGridTextColumn x:Name="experienceInYearsColumn" Binding="{Binding experienceInYears}" Header="experience In Years" Width="SizeToHeader"/>
                            <DataGridTextColumn x:Name="nameColumn" Binding="{Binding name}" Header="name" Width="150"/>
                            <DataGridTextColumn x:Name="positionColumn" Binding="{Binding position}" Header="position" Width="150"/>
                        </DataGrid.Columns>
                    </DataGrid>

                    <Grid x:Name="grid1" HorizontalAlignment="Left" Margin="50,0,0,75" VerticalAlignment="Bottom">

                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>

                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>

                        <Label Content="employee Id:" Grid.Column="0" HorizontalAlignment="Left" Margin="3" Grid.Row="0" VerticalAlignment="Center"/>
                        <TextBox x:Name="employeeIdTextBox" IsEnabled="False" Grid.Column="1" HorizontalAlignment="Left" Height="23" Margin="3" Grid.Row="0" Text="{Binding employeeId, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" VerticalAlignment="Center" Width="120"/>
                        
                        <Label Content="experience In Years:" Grid.Column="0" HorizontalAlignment="Left" Margin="3" Grid.Row="1" VerticalAlignment="Center"/>
                        <TextBox x:Name="experienceInYearsTextBox" Grid.Column="1" HorizontalAlignment="Left" Height="23" Margin="3" Grid.Row="1" 
                                 Text="{Binding experienceInYears, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" VerticalAlignment="Center" Width="120"
                                 Validation.ErrorTemplate="{StaticResource validationTemplate}" Style="{StaticResource textBoxInError}"/>
                        
                        <Label Content="name:" Grid.Column="0" HorizontalAlignment="Left" Margin="3" Grid.Row="2" VerticalAlignment="Center"/>
                        <TextBox x:Name="nameTextBox" Grid.Column="1" HorizontalAlignment="Left" Height="23" Margin="3" Grid.Row="2" 
                                 Text="{Binding name, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" VerticalAlignment="Center" Width="120"
                                 Validation.ErrorTemplate="{StaticResource validationTemplate}" Style="{StaticResource textBoxInError}"/>
                        
                        <Label Content="position:" Grid.Column="0" HorizontalAlignment="Left" Margin="3" Grid.Row="3" VerticalAlignment="Center"/>
                        <TextBox x:Name="positionTextBox" Grid.Column="1" HorizontalAlignment="Left" Height="23" Margin="3" Grid.Row="3" 
                                 Text="{Binding position, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" VerticalAlignment="Center" Width="120"
                                 Validation.ErrorTemplate="{StaticResource validationTemplate}" Style="{StaticResource textBoxInError}"/>
                    </Grid>

                    <Button Content="Previous" Click="btnPrevious_Click" HorizontalAlignment="Left" Margin="25,231,0,0" VerticalAlignment="Top" Width="100"/>
                    <Button Content="Next" Click="btnNext_Click" HorizontalAlignment="Left" Margin="439,231,0,0" VerticalAlignment="Top" Width="100"/>

                    <Button Content="New" Click="btnNew_Click" HorizontalAlignment="Left" Margin="361,339,0,0" VerticalAlignment="Top" Width="75" Height="40"/>
                    <Button Content="Edit" Click="btnEdit_Click" HorizontalAlignment="Left" Margin="464,339,0,0" VerticalAlignment="Top" Width="75" Height="40"/>
                    <Button Content="Delete" Click="btnDelete_Click" HorizontalAlignment="Left" Margin="414,405,0,0" VerticalAlignment="Top" Width="75" Height="40"/>
                    
                    <Button Content="Save" Click="btnSave_Click" HorizontalAlignment="Left" Margin="361,472,0,0" VerticalAlignment="Top" Width="75" Height="40">
                        <Button.Style>
                            <Style TargetType="{x:Type Button}">
                                <Setter Property="IsEnabled" Value="false" />
                                <Style.Triggers>
                                    <MultiDataTrigger>
                                        <MultiDataTrigger.Conditions>
                                            <Condition Binding="{Binding ElementName=nameTextBox, Path=(Validation.HasError)}" Value="false" />

                                        </MultiDataTrigger.Conditions>
                                        <Setter Property="IsEnabled" Value="true" />
                                    </MultiDataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Button.Style>
                    </Button>
                        
                    <Button Content="Cancel" Click="btnCancel_Click" HorizontalAlignment="Left" Margin="464,472,0,0" VerticalAlignment="Top" Width="75" Height="40"/>

                </Grid>
            </TabItem>

            <TabItem Header="Tasks">
                <Grid Background="#FFE5E5E5" DataContext="{StaticResource taskViewSource}">

                    <DataGrid x:Name="taskDataGrid" AutoGenerateColumns="False" EnableRowVirtualization="True" ItemsSource="{Binding}" Margin="25,25,25,360" RowDetailsVisibilityMode="VisibleWhenSelected">
                        <DataGrid.Columns>
                            <DataGridTextColumn x:Name="descriptionColumn" Binding="{Binding description}" Header="description" Width="250"/>
                            <DataGridTextColumn x:Name="taskIdColumn" Binding="{Binding taskId}" Header="task Id" Width="SizeToHeader"/>
                            <DataGridTextColumn x:Name="timeRemainingColumn" Binding="{Binding timeRemaining}" Header="time Remaining" Width="SizeToHeader"/>
                        </DataGrid.Columns>
                    </DataGrid>

                    <Grid x:Name="grid2" HorizontalAlignment="Left" Margin="50,0,0,75" VerticalAlignment="Bottom">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        <Label Content="description:" Grid.Column="0" HorizontalAlignment="Left" Margin="3" Grid.Row="0" VerticalAlignment="Center"/>
                        <TextBox x:Name="descriptionTextBox" Grid.Column="1" HorizontalAlignment="Left" Height="23" Margin="3" Grid.Row="0" Text="{Binding description, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" VerticalAlignment="Center" Width="120"/>
                        <Label Content="task Id:" Grid.Column="0" HorizontalAlignment="Left" Margin="3" Grid.Row="1" VerticalAlignment="Center"/>
                        <TextBox x:Name="taskIdTextBox" IsEnabled="False" Grid.Column="1" HorizontalAlignment="Left" Height="23" Margin="3" Grid.Row="1" Text="{Binding taskId, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" VerticalAlignment="Center" Width="120"/>
                        <Label Content="time Remaining:" Grid.Column="0" HorizontalAlignment="Left" Margin="3" Grid.Row="2" VerticalAlignment="Center"/>
                        <TextBox x:Name="timeRemainingTextBox" Grid.Column="1" HorizontalAlignment="Left" Height="23" Margin="3" Grid.Row="2" Text="{Binding timeRemaining, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" VerticalAlignment="Center" Width="120"/>
                    </Grid>

                    <Button Content="Previous" Click="btnPrevious1_Click" HorizontalAlignment="Left" Margin="25,231,0,0" VerticalAlignment="Top" Width="100"/>
                    <Button Content="Next" Click="btnNext1_Click" HorizontalAlignment="Left" Margin="439,231,0,0" VerticalAlignment="Top" Width="100"/>

                    <Button Content="New" Click="btnNew_Click" HorizontalAlignment="Left" Margin="361,339,0,0" VerticalAlignment="Top" Width="75" Height="40"/>
                    <Button Content="Edit" Click="btnEdit_Click" HorizontalAlignment="Left" Margin="464,339,0,0" VerticalAlignment="Top" Width="75" Height="40"/>
                    <Button Content="Delete" Click="btnDelete_Click" HorizontalAlignment="Left" Margin="414,405,0,0" VerticalAlignment="Top" Width="75" Height="40"/>
                    <Button Content="Save" Click="btnSave1_Click" HorizontalAlignment="Left" Margin="361,472,0,0" VerticalAlignment="Top" Width="75" Height="40"/>
                    <Button Content="Cancel" Click="btnCancel_Click" HorizontalAlignment="Left" Margin="464,472,0,0" VerticalAlignment="Top" Width="75" Height="40"/>

                </Grid>
            </TabItem>

            <TabItem Header="Assignments">
                <Grid Background="#FFE5E5E5" DataContext="{StaticResource employeeAssignmentsViewSource}">
                    <Label Content="Employees" HorizontalAlignment="Left" Margin="119,50,0,0" VerticalAlignment="Top"/>
                    <Label Content="Tasks" HorizontalAlignment="Right" Margin="0,50,193,0" VerticalAlignment="Top"/>
                    
                    <ComboBox x:Name="cmbEmployees" HorizontalAlignment="Left" Margin="119,81,0,0" VerticalAlignment="Top" Width="120">
                        <ComboBox.ItemTemplate>
                            <DataTemplate>
                                <TextBlock>
                                    <TextBlock.Text>
                                        <MultiBinding StringFormat="{}{0} {1}">
                                            <Binding Path="name"/>
                                            <Binding Path="position"/>
                                        </MultiBinding>
                                    </TextBlock.Text>
                                </TextBlock>
                            </DataTemplate>
                        </ComboBox.ItemTemplate>
                    </ComboBox>

                    <ComboBox x:Name="cmbTasks" HorizontalAlignment="Left" Margin="334,81,0,0" VerticalAlignment="Top" Width="120"/>


                    <DataGrid x:Name="assignmentsDataGrid" AutoGenerateColumns="False" EnableRowVirtualization="True" ItemsSource="{Binding}" Margin="20,140,20,250" RowDetailsVisibilityMode="VisibleWhenSelected" IsSynchronizedWithCurrentItem="True">
                        <DataGrid.Columns>
                            <DataGridTextColumn x:Name="nameColumn1" Binding="{Binding name}" Header="Name" Width="150"/>
                            <DataGridTextColumn x:Name="positionColumn1" Binding="{Binding position}" Header="Position" Width="150"/>
                            <DataGridTextColumn x:Name="descriptionColumn1" Binding="{Binding description}" Header="Task description" Width="200"/>
                        </DataGrid.Columns>
                    </DataGrid>



                    <Button Content="Previous" Click="btnPrevious2_Click" HorizontalAlignment="Left" Margin="82,341,0,0" VerticalAlignment="Top" Width="100"/>
                    <Button Content="Next" Click="btnNext2_Click" HorizontalAlignment="Left" Margin="382,341,0,0" VerticalAlignment="Top" Width="100"/>

                    <Button Content="New" Click="btnNew_Click" HorizontalAlignment="Left" Margin="159,411,0,0" VerticalAlignment="Top" Width="75" Height="40"/>
                    <Button Content="Edit" Click="btnEdit_Click" HorizontalAlignment="Left" Margin="159,462,0,0" VerticalAlignment="Top" Width="75" Height="40"/>
                    <Button Content="Delete" Click="btnDelete_Click" HorizontalAlignment="Left" Margin="296,462,0,0" VerticalAlignment="Top" Width="75" Height="40"/>
                    <Button Content="Save" Click="btnSave2_Click" HorizontalAlignment="Left" Margin="296,411,0,0" VerticalAlignment="Top" Width="75" Height="40"/>

                </Grid>
            </TabItem>

        </TabControl>
        <Label Content="Mobile App Development" HorizontalAlignment="Center" Margin="0,13,0,0" VerticalAlignment="Top" FontWeight="Bold"/>

    </Grid>
</Window>
